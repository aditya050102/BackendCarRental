// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    [Migration("20231002104703_newwwwwww")]
    partial class newwwwwww
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Models.CarDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<int>("RentalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarDetails");
                });

            modelBuilder.Entity("Shared.Models.RentalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Car")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnRequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentalAggrements");
                });

            modelBuilder.Entity("Shared.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f77db188-50bf-484f-92b7-3ca90f04bfde"),
                            Email = "Admin@admin.com",
                            Name = "Admin",
                            Password = "Admin@123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3672e515-5948-4c40-93ce-3fdd8d2b3341"),
                            Email = "user1@gmail.com",
                            Name = "User1",
                            Password = "User@123",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("e68e4968-651c-4e53-9020-31f5130f2676"),
                            Email = "user2@gmail.com",
                            Name = "User2",
                            Password = "User@123",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("9ce0a45c-87be-49f6-83e3-3dfa3c5be02b"),
                            Email = "user3@gmail.com",
                            Name = "User3",
                            Password = "User@123",
                            Role = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
